"use strict";function ScriptLoader(path={}){var{useLogger,path}=path;return this.name="[SCRIPT-LOADER]",this.slug="script-loader",this.useLogger=void 0!==useLogger&&useLogger,this.logWindow,this.scriptDirectoryPath=path||"./",this.mainContainer=document.createElement("div"),this.staticContainer=document.createElement("div"),this.dynamicContainer=document.createElement("div"),this.startTime=null,this.endTime=null,this.init=scriptObject=>{this.startTime=Date.now(),this.useLogger&&this.log("init",!1,scriptObject),this.setupScriptContainers(),this.load(scriptObject)},this.setupScriptContainers=()=>{this.mainContainer.style.position="absolute",this.mainContainer.id=`${this.slug}_main-container`,this.staticContainer.id=this.slug+"_static-scripts-container",this.mainContainer.appendChild(this.staticContainer),this.dynamicContainer.id=this.slug+"_dynamic-scripts-container",this.mainContainer.appendChild(this.dynamicContainer),document.body.appendChild(this.mainContainer)},this.load=scriptObject=>{this.useLogger&&this.log("Start loading scripts...",!0),scriptObject.statics&&0<scriptObject.statics.length&&this.loadScripts(!0,scriptObject.statics).then(()=>{this.useLogger&&this.log("static scripts loaded",!0),scriptObject.main&&this.loadScript(!0,scriptObject.main).then(()=>{this.finish()})}),scriptObject.dynamics&&0<scriptObject.dynamics.length&&this.loadScripts(!1,scriptObject.dynamics).then(()=>{this.useLogger&&this.log("dynamic scripts loaded",!0)})},this.loadScripts=(isStatic,scripts)=>new Promise((resolve,reject)=>{var counter=0,loadLoop=()=>{scripts[counter]?this.loadScript(isStatic,scripts[counter]).then(()=>{this.useLogger&&this.log("progress",!1,{value:counter+1,total:scripts.length}),++counter>=scripts.length?(this.useLogger&&console.groupEnd("Load Progress"),resolve()):loadLoop()}).catch(err=>reject(err)):resolve()};this.useLogger&&console.groupCollapsed("Load Progress"),loadLoop()}),this.loadScript=(isStatic,name)=>{let startTime=Date.now(),endTime,totalTime;return this.useLogger&&this.log(`Loading ${isStatic?"static":"dynamic"} script named ${name}...`,!0),new Promise((resolve,reject)=>{var script=document.createElement("script");script.src=this.scriptDirectoryPath+name+".js",script.onload=()=>{endTime=Date.now(),totalTime=(endTime-startTime)/1e3;var message=`*${name} script loaded in ${totalTime}s.`;this.useLogger&&this.log(message,!0),resolve({isSuccess:!0,time:totalTime,payload:{message:message}})},script.onerror=function(err){endTime=Date.now(),totalTime=(endTime-startTime)/1e3,console.error(err),reject({isSuccess:!1,time:totalTime,payload:err})},(isStatic?this.staticContainer:this.dynamicContainer).appendChild(script)})},this.finish=()=>{var totalTime;this.endTime=Date.now(),this.useLogger&&(totalTime=(this.endTime-this.startTime)/1e3,this.log("finish",!1,totalTime))},this.log=(message,useBreak,payload)=>{if("init"===message){console.group(this.name),console.table(payload);var messageHtml=this.name+" Log Window";this.logWindow=document.createElement("div"),this.logWindow.title=messageHtml,this.logWindow.id=this.slug+"_log-window",this.logWindow.setAttribute("style","color:#222;font-size:0.8em;border:1px solid;padding:0.5rem;max-height:584px;overflow-y:auto;"),this.logWindow.innerHTML+=`${messageHtml}<hr>`,this.logWindow.innerHTML+="Script Object : <pre style='border:1px solid;padding:5px;'><code>"+JSON.stringify(scriptObject,"",2)+"</code></pre>",this.mainContainer.appendChild(this.logWindow)}else if("progress"===message){messageHtml=payload.value/payload.total*100;console.log(`Progress: ${messageHtml} %`);messageHtml=`
        <div>
          <label>Loading progress:</label><br/>
          <progress value="${payload.value}" max="${payload.total}"> ${messageHtml}% </progress>
        </div>
      `;this.logWindow.innerHTML+=messageHtml}else if("finish"===message){const message=`Total load time: ${payload} seconds`;console.log(message),this.logWindow.innerHTML+=`<p>Total load time: <strong>${payload}</strong> seconds</p>`,console.groupEnd(this.name)}else console.log(message),this.logWindow.innerHTML+=message+(useBreak?"<br/>":"")},this.reset=()=>{this.dynamicContainer.innerHTML=""},this}function ScriptObject(main){var{statics:statics=Array,dynamics:dynamics=Array,main:main=String}=main;return this.statics=statics,this.dynamics=dynamics,this.main=main,this}